{
  "name": "Matchmaker",
  "url": "/Matchmaker",
  "description": "Enables the use of an external match-making service in conjunction with PlayFab hosted Game Server instances",
  "datatypes": {
    "AuthUserRequest": {
      "name": "AuthUserRequest",
      "properties": [
        {
          "name": "AuthorizationTicket",
          "description": "Session Ticket provided by the client",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "AuthUserResponse": {
      "name": "AuthUserResponse",
      "properties": [
        {
          "name": "Authorized",
          "description": "boolean indicating if the user has been authorized to use the external match-making service",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        },
        {
          "name": "PlayFabId",
          "description": "PlayFab unique identifier of the account that has been authorized",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "UserInfoRequest": {
      "name": "UserInfoRequest",
      "properties": [
        {
          "name": "PlayFabId",
          "description": "PlayFab unique identifier of the user whose information is being requested",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "MinCatalogVersion",
          "description": "minimum catalog version for which data is requested (filters the results to only contain inventory items which have a catalog version of this or higher)",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        }
      ]
    },
    "UserInfoResponse": {
      "name": "UserInfoResponse",
      "properties": [
        {
          "name": "PlayFabId",
          "description": "PlayFab unique identifier of the user whose information was requested",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Username",
          "description": "PlayFab unique user name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "TitleDisplayName",
          "description": "title specific display name, if set",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Inventory",
          "description": "array of inventory items in the user's current inventory",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ItemInstance",
          "isclass": true,
          "optional": true
        },
        {
          "name": "VirtualCurrency",
          "description": "array of virtual currency balance(s) belonging to the user",
          "collection": "map",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "IsDeveloper",
          "description": "boolean indicating whether the user is a developer",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": false
        },
        {
          "name": "SteamId",
          "description": "Steam unique identifier, if the user has an associated Steam account",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "ItemInstance": {
      "name": "ItemInstance",
      "properties": [
        {
          "name": "ItemId",
          "description": "Object name",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ItemInstanceId",
          "description": "unique item id",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ItemClass",
          "description": "class name object belongs to",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "PurchaseDate",
          "description": "date purchased",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Expiration",
          "description": "date object will expire (optional)",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "RemainingUses",
          "description": "number of remaining uses (optional)",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": true
        },
        {
          "name": "Annotation",
          "description": "game specific comment",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "CatalogVersion",
          "description": "catalog version that this item is part of",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "BundleParent",
          "description": "Unique ID of the parent of where this item may have come from (e.g. if it comes from a crate or coupon)",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "StartGameRequest": {
      "name": "StartGameRequest",
      "properties": [
        {
          "name": "Build",
          "description": "unique identifier of the previously uploaded build executable which is to be started",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Region",
          "description": "region with which to associate the server, for filtering",
          "jsontype": "String",
          "actualtype": "Region",
          "isenum": true,
          "optional": false
        },
        {
          "name": "GameMode",
          "description": "game mode for this Game Server Instance",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        },
        {
          "name": "Subscriber",
          "description": "IP Address of the external service which should receive status updates for the session",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "Region": {
      "name": "Region",
      "isenum": true,
      "enumvalues": [
        {
          "name": "USWest"
        },
        {
          "name": "USCentral"
        },
        {
          "name": "USEast"
        },
        {
          "name": "EUWest"
        },
        {
          "name": "APSouthEast"
        },
        {
          "name": "APNorthEast"
        },
        {
          "name": "SAEast"
        },
        {
          "name": "Australia"
        },
        {
          "name": "China"
        },
        {
          "name": "UberLan"
        }
      ]
    },
    "StartGameResponse": {
      "name": "StartGameResponse",
      "properties": [
        {
          "name": "LobbyID",
          "description": "unique identifier for the lobby in the new Game Server Instance",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Region",
          "description": "region with which the server is associated",
          "jsontype": "String",
          "actualtype": "Region",
          "isenum": true,
          "optional": true
        },
        {
          "name": "GameMode",
          "description": "game mode for this Game Server Instance",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        },
        {
          "name": "Build",
          "description": "unique identifier of the previously uploaded build executable which is being started",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Address",
          "description": "IP address of the new Game Server Instance",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Port",
          "description": "port number for communication with the Game Server Instance",
          "jsontype": "Number",
          "actualtype": "uint32",
          "optional": false
        }
      ]
    },
    "PlayerJoinedRequest": {
      "name": "PlayerJoinedRequest",
      "properties": [
        {
          "name": "ServerId",
          "description": "unique identifier of the Game Server Instance the user is joining",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "PlayFabId",
          "description": "PlayFab unique identifier for the user joining",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "PlayerJoinedResponse": {
      "name": "PlayerJoinedResponse",
      "properties": []
    },
    "PlayerLeftRequest": {
      "name": "PlayerLeftRequest",
      "properties": [
        {
          "name": "ServerId",
          "description": "unique identifier of the Game Server Instance the user is leaving",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "PlayFabId",
          "description": "PlayFab unique identifier for the user leaving",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "PlayerLeftResponse": {
      "name": "PlayerLeftResponse",
      "properties": []
    }
  },
  "calls": [
    {
      "name": "AuthUser",
      "summary": "Validates a user with the PlayFab service",
      "requestDetails": "This API allows the external match-making service to confirm that the user has a valid Session Ticket for the title, in order to securely enable match-making. The client passes the user's Session Ticket to the external match-making service, which then passes the Session Ticket in as the AuthorizationTicket in this call.",
      "subgroup": "Matchmaking APIs",
      "url": "/Matchmaker/AuthUser",
      "auth": "SecretKey",
      "method": "POST",
      "request": "AuthUserRequest",
      "result": "AuthUserResponse",
      "seeAlso": [
        "PlayerJoined",
        "PlayerLeft",
        "StartGame",
        "UserInfo"
      ],
      "errors": [
        "InvalidParams"
      ]
    },
    {
      "name": "PlayerJoined",
      "summary": "Informs the PlayFab game server hosting service that the indicated user has joined the Game Server Instance specified",
      "subgroup": "Matchmaking APIs",
      "url": "/Matchmaker/PlayerJoined",
      "auth": "SecretKey",
      "method": "POST",
      "request": "PlayerJoinedRequest",
      "result": "PlayerJoinedResponse",
      "seeAlso": [
        "AuthUser",
        "PlayerLeft",
        "StartGame",
        "UserInfo"
      ],
      "errors": [
        "InvalidParams"
      ]
    },
    {
      "name": "PlayerLeft",
      "summary": "Informs the PlayFab game server hosting service that the indicated user has left the Game Server Instance specified",
      "subgroup": "Matchmaking APIs",
      "url": "/Matchmaker/PlayerLeft",
      "auth": "SecretKey",
      "method": "POST",
      "request": "PlayerLeftRequest",
      "result": "PlayerLeftResponse",
      "seeAlso": [
        "AuthUser",
        "PlayerJoined",
        "StartGame",
        "UserInfo"
      ],
      "errors": [
        "InvalidParams"
      ]
    },
    {
      "name": "StartGame",
      "summary": "Instructs the PlayFab game server hosting service to instantiate a new Game Server Instance",
      "subgroup": "Matchmaking APIs",
      "url": "/Matchmaker/StartGame",
      "auth": "SecretKey",
      "method": "POST",
      "request": "StartGameRequest",
      "result": "StartGameResponse",
      "seeAlso": [
        "AuthUser",
        "PlayerJoined",
        "PlayerLeft",
        "UserInfo"
      ],
      "errors": [
        "InvalidParams"
      ]
    },
    {
      "name": "UserInfo",
      "summary": "Retrieves the relevant details for a specified user, which the external match-making service can then use to compute effective matches",
      "subgroup": "Matchmaking APIs",
      "url": "/Matchmaker/UserInfo",
      "auth": "SecretKey",
      "method": "POST",
      "request": "UserInfoRequest",
      "result": "UserInfoResponse",
      "seeAlso": [
        "AuthUser",
        "PlayerJoined",
        "PlayerLeft",
        "StartGame"
      ],
      "errors": [
        "InvalidParams"
      ]
    }
  ],
  "subgroups": [
    {
      "name": "Matchmaking APIs",
      "methods": [
        "AuthUser",
        "PlayerJoined",
        "PlayerLeft",
        "StartGame",
        "UserInfo"
      ]
    }
  ],
  "errors": {
    "Success": {
      "id": 0,
      "name": "Success"
    },
    "InvalidParams": {
      "id": 1000,
      "name": "InvalidParams"
    },
    "AccountNotFound": {
      "id": 1001,
      "name": "AccountNotFound"
    },
    "AccountBanned": {
      "id": 1002,
      "name": "AccountBanned"
    },
    "InvalidUsernameOrPassword": {
      "id": 1003,
      "name": "InvalidUsernameOrPassword"
    },
    "InvalidTitleId": {
      "id": 1004,
      "name": "InvalidTitleId"
    },
    "InvalidEmailAddress": {
      "id": 1005,
      "name": "InvalidEmailAddress"
    },
    "EmailAddressNotAvailable": {
      "id": 1006,
      "name": "EmailAddressNotAvailable"
    },
    "InvalidUsername": {
      "id": 1007,
      "name": "InvalidUsername"
    },
    "InvalidPassword": {
      "id": 1008,
      "name": "InvalidPassword"
    },
    "UsernameNotAvailable": {
      "id": 1009,
      "name": "UsernameNotAvailable"
    },
    "InvalidSteamTicket": {
      "id": 1010,
      "name": "InvalidSteamTicket"
    },
    "AccountAlreadyLinked": {
      "id": 1011,
      "name": "AccountAlreadyLinked"
    },
    "LinkedAccountAlreadyClaimed": {
      "id": 1012,
      "name": "LinkedAccountAlreadyClaimed"
    },
    "InvalidFacebookToken": {
      "id": 1013,
      "name": "InvalidFacebookToken"
    },
    "AccountNotLinked": {
      "id": 1014,
      "name": "AccountNotLinked"
    },
    "FailedByPaymentProvider": {
      "id": 1015,
      "name": "FailedByPaymentProvider"
    },
    "CouponCodeNotFound": {
      "id": 1016,
      "name": "CouponCodeNotFound"
    },
    "InvalidContainerItem": {
      "id": 1017,
      "name": "InvalidContainerItem"
    },
    "ContainerNotOwned": {
      "id": 1018,
      "name": "ContainerNotOwned"
    },
    "KeyNotOwned": {
      "id": 1019,
      "name": "KeyNotOwned"
    },
    "InvalidItemIdInTable": {
      "id": 1020,
      "name": "InvalidItemIdInTable"
    },
    "InvalidReceipt": {
      "id": 1021,
      "name": "InvalidReceipt"
    },
    "ReceiptAlreadyUsed": {
      "id": 1022,
      "name": "ReceiptAlreadyUsed"
    },
    "ReceiptCancelled": {
      "id": 1023,
      "name": "ReceiptCancelled"
    },
    "GameNotFound": {
      "id": 1024,
      "name": "GameNotFound"
    },
    "GameModeNotFound": {
      "id": 1025,
      "name": "GameModeNotFound"
    },
    "InvalidGoogleToken": {
      "id": 1026,
      "name": "InvalidGoogleToken"
    },
    "BuildNotFound": {
      "id": 1027,
      "name": "BuildNotFound"
    },
    "PlayerNotInGame": {
      "id": 1028,
      "name": "PlayerNotInGame"
    },
    "InvalidTicket": {
      "id": 1029,
      "name": "InvalidTicket"
    },
    "InvalidOrderInfo": {
      "id": 1030,
      "name": "InvalidOrderInfo"
    },
    "RegistrationIncomplete": {
      "id": 1031,
      "name": "RegistrationIncomplete"
    },
    "InvalidPlatform": {
      "id": 1032,
      "name": "InvalidPlatform"
    },
    "SteamApplicationNotOwned": {
      "id": 1033,
      "name": "SteamApplicationNotOwned"
    },
    "WrongSteamAccount": {
      "id": 1034,
      "name": "WrongSteamAccount"
    },
    "TitleNotActivated": {
      "id": 1035,
      "name": "TitleNotActivated"
    },
    "RegistrationSessionNotFound": {
      "id": 1036,
      "name": "RegistrationSessionNotFound"
    },
    "NoSuchMod": {
      "id": 1037,
      "name": "NoSuchMod"
    },
    "FileNotFound": {
      "id": 1038,
      "name": "FileNotFound"
    },
    "DuplicateEmail": {
      "id": 1039,
      "name": "DuplicateEmail"
    },
    "ItemNotFound": {
      "id": 1040,
      "name": "ItemNotFound"
    },
    "ItemNotOwned": {
      "id": 1041,
      "name": "ItemNotOwned"
    },
    "ItemNotRecycleable": {
      "id": 1042,
      "name": "ItemNotRecycleable"
    },
    "ItemNotAffordable": {
      "id": 1043,
      "name": "ItemNotAffordable"
    },
    "InvalidVirtualCurrency": {
      "id": 1044,
      "name": "InvalidVirtualCurrency"
    },
    "NonPositiveValue": {
      "id": 1045,
      "name": "NonPositiveValue"
    },
    "InvalidRegion": {
      "id": 1046,
      "name": "InvalidRegion"
    },
    "RegionAtCapacity": {
      "id": 1047,
      "name": "RegionAtCapacity"
    },
    "ServerFailedToStart": {
      "id": 1048,
      "name": "ServerFailedToStart"
    },
    "NameNotAvailable": {
      "id": 1049,
      "name": "NameNotAvailable"
    },
    "InsufficientFunds": {
      "id": 1050,
      "name": "InsufficientFunds"
    },
    "InvalidDeviceID": {
      "id": 1051,
      "name": "InvalidDeviceID"
    },
    "InvalidPushNotificationToken": {
      "id": 1052,
      "name": "InvalidPushNotificationToken"
    },
    "NoRemainingUses": {
      "id": 1053,
      "name": "NoRemainingUses"
    },
    "InvalidPaymentProvider": {
      "id": 1054,
      "name": "InvalidPaymentProvider"
    },
    "PurchaseInitializationFailure": {
      "id": 1055,
      "name": "PurchaseInitializationFailure"
    },
    "DuplicateUsername": {
      "id": 1056,
      "name": "DuplicateUsername"
    },
    "InvalidBuyerInfo": {
      "id": 1057,
      "name": "InvalidBuyerInfo"
    },
    "NoGameModeParamsSet": {
      "id": 1058,
      "name": "NoGameModeParamsSet"
    }
  },
  "errorList": [
    "Success",
    "InvalidParams",
    "AccountNotFound",
    "AccountBanned",
    "InvalidUsernameOrPassword",
    "InvalidTitleId",
    "InvalidEmailAddress",
    "EmailAddressNotAvailable",
    "InvalidUsername",
    "InvalidPassword",
    "UsernameNotAvailable",
    "InvalidSteamTicket",
    "AccountAlreadyLinked",
    "LinkedAccountAlreadyClaimed",
    "InvalidFacebookToken",
    "AccountNotLinked",
    "FailedByPaymentProvider",
    "CouponCodeNotFound",
    "InvalidContainerItem",
    "ContainerNotOwned",
    "KeyNotOwned",
    "InvalidItemIdInTable",
    "InvalidReceipt",
    "ReceiptAlreadyUsed",
    "ReceiptCancelled",
    "GameNotFound",
    "GameModeNotFound",
    "InvalidGoogleToken",
    "BuildNotFound",
    "PlayerNotInGame",
    "InvalidTicket",
    "InvalidOrderInfo",
    "RegistrationIncomplete",
    "InvalidPlatform",
    "SteamApplicationNotOwned",
    "WrongSteamAccount",
    "TitleNotActivated",
    "RegistrationSessionNotFound",
    "NoSuchMod",
    "FileNotFound",
    "DuplicateEmail",
    "ItemNotFound",
    "ItemNotOwned",
    "ItemNotRecycleable",
    "ItemNotAffordable",
    "InvalidVirtualCurrency",
    "NonPositiveValue",
    "InvalidRegion",
    "RegionAtCapacity",
    "ServerFailedToStart",
    "NameNotAvailable",
    "InsufficientFunds",
    "InvalidDeviceID",
    "InvalidPushNotificationToken",
    "NoRemainingUses",
    "InvalidPaymentProvider",
    "PurchaseInitializationFailure",
    "DuplicateUsername",
    "InvalidBuyerInfo",
    "NoGameModeParamsSet"
  ]
}