{
  "name": "Entity",
  "url": "/Entity",
  "description": "API methods to control entity profiles. API methods for getting and setting objects on entity profiles. API methods that allow fo exchanging legacy authentication mechanisms for a new Entity Token. Entity Tokens are required when calling Entity based APIs such as Entity Profile and Entity Data APIs.",
  "apiDescriptionList": [
    "API methods to control entity profiles.",
    "API methods for getting and setting objects on entity profiles.",
    "API methods that allow fo exchanging legacy authentication mechanisms for a new Entity Token. Entity Tokens are required when calling Entity based APIs such as Entity Profile and Entity Data APIs."
  ],
  "AnyInclusiveFlags": [
    "Beta"
  ],
  "datatypes": {
    "EffectType": {
      "name": "EffectType",
      "className": "EffectType",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "isenum": true,
      "enumvalues": [
        {
          "name": "Allow"
        },
        {
          "name": "Deny"
        }
      ]
    },
    "EntityDataObject": {
      "name": "EntityDataObject",
      "className": "EntityDataObject",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "An entity object and its associated meta data.",
      "properties": [
        {
          "name": "DataObject",
          "description": "Un-escaped JSON object, if DataAsObject is true.",
          "jsontype": "Object",
          "actualtype": "object",
          "optional": true
        },
        {
          "name": "EscapedDataObject",
          "description": "Escaped string JSON body of the object, if DataAsObject is default or false.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ObjectName",
          "description": "Name of this object.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "EntityPermissionStatement": {
      "name": "EntityPermissionStatement",
      "className": "EntityPermissionStatement",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Action",
          "description": "The action this statement effects. Supported effects for Data are 'Read', 'Write' and '*'",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Comment",
          "description": "A comment about the statement. Intended solely for bookkeeping and debugging.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Effect",
          "description": "The effect this statement will have. It can be either 'Allow' or 'Deny'",
          "jsontype": "String",
          "actualtype": "EffectType",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Principal",
          "description": "The principal this statement will effect. It may be '*' for any, { \"[any entity type]\": \"[any entity id]\" }, { \"FriendOf\": true }, { \"MemberOf\": {  \"Segment\": \"segmentId\" } }, { \"MemberOf\": {  \"SharedGroup\": \"Group ID\" } }, { \"title\": \"TitleId\" }, { \"namespace\": \"NamespaceId\" }, { \"ChildOf\" : { \"EntityType\": \"[any entity type]\", \"EntityId\": \"[any entity id]\" }. See documentation for full examples and explanations.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Resource",
          "description": "The portion of a profile that this statement applies to, such as 'pfrn:data--*!*/Profile/Objects/object1.json'",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "EntityProfileBody": {
      "name": "EntityProfileBody",
      "className": "EntityProfileBody",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "EntityChain",
          "description": "The chain of responsibility for this entity. This is a representation of 'ownership'. It is constructed using the following formats (replace '[ID]' with the unique identifier for the given entity): Namespace: 'namespace![Namespace ID]' Title: 'title![Namespace ID]/[Title ID]' Namespace Player Account: 'namespace_player_account![Namespace ID]/[NamespacePlayerAccount ID]' Title Player Account: 'title_player_account![Namespace ID]/[Title ID]/[NamespacePlayerAccount ID]/[TitlePlayerAccount ID]' Character: 'character![Namespace ID]/[Title ID]/[NamespacePlayerAccount ID]/[TitlePlayerAccount ID]/[Character ID]'",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "EntityId",
          "description": "Identifier for this entity",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "EntityType",
          "description": "Type of the entity that is being returned",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Objects",
          "description": "The objects on this profile.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityDataObject",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Permissions",
          "description": "The permissions that govern access to this entity profile and its properties. Only includes permissions set on this profile, not global statements from titles and namespaces.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityProfilePermissionStatement",
          "isclass": true,
          "optional": true
        },
        {
          "name": "VersionNumber",
          "description": "The version number of the profile in persistent storage at the time of the read. Used for optional optimistic concurrency during update.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "EntityProfilePermissionStatement": {
      "name": "EntityProfilePermissionStatement",
      "className": "EntityProfilePermissionStatement",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Action",
          "description": "The action this statement effects. May be 'Read', 'Write' or '*' for both read and write.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Comment",
          "description": "A comment about the statement. Intended solely for bookkeeping and debugging.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "DataConditions",
          "description": "Additional conditions to be applied for entity resources.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Effect",
          "description": "The effect this statement will have. It may be either Allow or Deny",
          "jsontype": "String",
          "actualtype": "EffectType",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Principal",
          "description": "The principal this statement will effect.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Resource",
          "description": "The resource this statements effects. Similar to 'pfrn:data--title![Namespace ID]/[Title ID]/Profile/*'",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "GetEntityProfileRequest": {
      "name": "GetEntityProfileRequest",
      "className": "GetEntityProfileRequest",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "DataAsObject",
          "description": "Determines whether the objects will be returned as an escaped Json string or as a un-escaped Json object. Default is Json string.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        },
        {
          "name": "EntityId",
          "description": "The ID for the given entity.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "EntityType",
          "description": "The type of entity to get such as title, namespace_player_account, title_player_account, character",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetEntityProfileResponse": {
      "name": "GetEntityProfileResponse",
      "className": "GetEntityProfileResponse",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Profile",
          "description": "Entity profile",
          "jsontype": "Object",
          "actualtype": "EntityProfileBody",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "GetEntityTokenRequest": {
      "name": "GetEntityTokenRequest",
      "className": "GetEntityTokenRequest",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": []
    },
    "GetEntityTokenResponse": {
      "name": "GetEntityTokenResponse",
      "className": "GetEntityTokenResponse",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "EntityId",
          "description": "The identifier of the entity the token was issued for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "EntityToken",
          "description": "The token used to set X-EntityToken for all entity based API calls.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "EntityType",
          "description": "The type of entity the token was issued for.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "GetObjectsRequest": {
      "name": "GetObjectsRequest",
      "className": "GetObjectsRequest",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "EntityId",
          "description": "Identifier for this entity",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "EntityType",
          "description": "Type of entity such as User",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "EscapeObject",
          "description": "Determines whether the object will be returned as an escaped JSON string or as a un-escaped JSON object. Default is JSON object.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        }
      ]
    },
    "GetObjectsResponse": {
      "name": "GetObjectsResponse",
      "className": "GetObjectsResponse",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "EntityId",
          "description": "ID for the owner entity",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "EntityType",
          "description": "Type of entity that owns this data",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Objects",
          "description": "Requested objects that the calling entity has access to",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ObjectResult",
          "isclass": true,
          "optional": true
        },
        {
          "name": "ProfileVersion",
          "description": "The current version of the profile, can be used for concurrency control during updates.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        }
      ]
    },
    "ObjectPermissionStatement": {
      "name": "ObjectPermissionStatement",
      "className": "ObjectPermissionStatement",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Action",
          "description": "The action this statement effects. Supported effects for Data are 'Read', 'Write' and '*'",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "Effect",
          "description": "The effect this statement will have. It can be either 'Allow' or 'Deny'",
          "jsontype": "String",
          "actualtype": "EffectType",
          "isenum": true,
          "optional": false
        },
        {
          "name": "Principal",
          "description": "The principal this statement will effect. It may be '*' for any, { \"[any entity type]\": \"[any entity id]\" }, { \"FriendOf\": true }, { \"MemberOf\": {  \"Segment\": \"segmentId\" } }, { \"MemberOf\": {  \"SharedGroup\": \"Group ID\" } }, { \"title\": \"TitleId\" }, { \"namespace\": \"NamespaceId\" }, { \"ChildOf\" : { \"EntityType\": \"[any entity type]\", \"EntityId\": \"[any entity id]\" }. See documentation for full examples and explanations.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        }
      ]
    },
    "ObjectResult": {
      "name": "ObjectResult",
      "className": "ObjectResult",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "DataObject",
          "description": "Un-escaped JSON object, if EscapeObject false or default.",
          "jsontype": "Object",
          "actualtype": "object",
          "optional": true
        },
        {
          "name": "EscapedDataObject",
          "description": "Escaped string JSON body of the object, if EscapeObject is true.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ObjectName",
          "description": "Name of the object. Restricted to a-Z, 0-9, '(', ')', '_', '-' and '.'",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    },
    "OperationTypes": {
      "name": "OperationTypes",
      "className": "OperationTypes",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "isenum": true,
      "enumvalues": [
        {
          "name": "Created"
        },
        {
          "name": "Updated"
        },
        {
          "name": "Deleted"
        },
        {
          "name": "None"
        }
      ]
    },
    "SetEntityProfilePolicyRequest": {
      "name": "SetEntityProfilePolicyRequest",
      "className": "SetEntityProfilePolicyRequest",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "EntityId",
          "description": "The ID for the given entity.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "EntityType",
          "description": "The type of entity to get such as title, namespace_player_account, title_player_account, character",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "Statements",
          "description": "The statements to include in the access policy.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityPermissionStatement",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "SetEntityProfilePolicyResponse": {
      "name": "SetEntityProfilePolicyResponse",
      "className": "SetEntityProfilePolicyResponse",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "Permissions",
          "description": "The permissions that govern access to this entity profile and its properties. Only includes permissions set on this profile, not global statements from titles and namespaces.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "EntityProfilePermissionStatement",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "SetObject": {
      "name": "SetObject",
      "className": "SetObject",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "DataObject",
          "description": "Body of the object to be saved. If empty and DeleteObject is true object will be deleted if it exists, or no operation will occur if it does not exist. Only one of Object or EscapedDataObject fields may be used.",
          "jsontype": "Object",
          "actualtype": "object",
          "optional": true
        },
        {
          "name": "DeleteObject",
          "description": "Flag to indicate that this object should be deleted. Both DataObject and EscapedDataObject must not be set as well.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        },
        {
          "name": "EscapedDataObject",
          "description": "Body of the object to be saved as an escaped JSON string. If empty and DeleteObject is true object will be deleted if it exists, or no operation will occur if it does not exist. Only one of DataObject or EscapedDataObject fields may be used.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "ObjectName",
          "description": "Name of  object. Restricted to a-Z, 0-9, '(', ')', '_', '-' and '.'.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "SimpleStatements",
          "description": "Simplified permission statements that can be used instead of the more complex full statements. However these are not as full featured.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "SimplePermissionStatement",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Statements",
          "description": "The statements to include in the access policy.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "ObjectPermissionStatement",
          "isclass": true,
          "optional": true
        },
        {
          "name": "Unstructured",
          "description": "Flag to indicate if this is not a structured JSON object. If true data must be posted via EscapedDataObject. Saving unstructured values means that this cannot be used for segmentation and other services.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        }
      ]
    },
    "SetObjectResponse": {
      "name": "SetObjectResponse",
      "className": "SetObjectResponse",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "ObjectName",
          "description": "Name of the object",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "OperationReason",
          "description": "Optional reason to explain why the operation was the result that it was.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SetResult",
          "description": "Indicates which operation was completed, either Created, Updated, Deleted or None.",
          "jsontype": "String",
          "actualtype": "OperationTypes",
          "isenum": true,
          "optional": true
        }
      ]
    },
    "SetObjectsRequest": {
      "name": "SetObjectsRequest",
      "className": "SetObjectsRequest",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "EntityId",
          "description": "ID for the owner entity",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "EntityType",
          "description": "Type of entity that owns this object",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "ExpectedProfileVersion",
          "description": "Optional field used for concurrency control. By specifying the previously returned value of ProfileVersion from GetProfile API, you can ensure that the object set will only be performed if the profile has not been updated by any other clients since the version you last loaded.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": true
        },
        {
          "name": "Objects",
          "description": "Collection of objects to set on the profile.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "SetObject",
          "isclass": true,
          "optional": false
        }
      ]
    },
    "SetObjectsResponse": {
      "name": "SetObjectsResponse",
      "className": "SetObjectsResponse",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "properties": [
        {
          "name": "ProfileVersion",
          "description": "New version of the entity profile.",
          "jsontype": "Number",
          "actualtype": "int32",
          "optional": false
        },
        {
          "name": "SetResults",
          "description": "New version of the entity profile.",
          "collection": "array",
          "jsontype": "Object",
          "actualtype": "SetObjectResponse",
          "isclass": true,
          "optional": true
        }
      ]
    },
    "SimplePermissionStatement": {
      "name": "SimplePermissionStatement",
      "className": "SimplePermissionStatement",
      "classNameSpace": "PlayFab.Entity.Models",
      "assembly": "PlayFab.Entity.Models",
      "AnyInclusiveFlags": [
        "Beta"
      ],
      "description": "Simplified permission statements that can be used instead of the more complex full statements. However these are not as full featured. Only one of the flags can be used per statement.",
      "properties": [
        {
          "name": "Action",
          "description": "The action this statement effects. Supported effects for Data are 'Read', 'Write' and '*'",
          "jsontype": "String",
          "actualtype": "String",
          "optional": false
        },
        {
          "name": "All",
          "description": "Flag to indicate that this policy applies to all entities.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        },
        {
          "name": "Effect",
          "description": "The effect this statement will have. It can be either 'Allow' or 'Deny'",
          "jsontype": "String",
          "actualtype": "EffectType",
          "isenum": true,
          "optional": false
        },
        {
          "name": "FriendPermission",
          "description": "Flag to indicate of the requesting player's friends should be assigned this statement. (Only applicable from Client API currently.)",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        },
        {
          "name": "SegmentId",
          "description": "Id for the segment members that this policy applies to.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        },
        {
          "name": "SelfPermission",
          "description": "Flag to indicate of the requesting entity should be assigned this statement.",
          "jsontype": "Boolean",
          "actualtype": "Boolean",
          "optional": true
        },
        {
          "name": "SharedGroupId",
          "description": "Id for the shared group members that this policy applies to.",
          "jsontype": "String",
          "actualtype": "String",
          "optional": true
        }
      ]
    }
  },
  "subgroups": [
    {
      "name": "Account Management",
      "methods": [
        "GetProfile",
        "SetProfilePolicy"
      ]
    },
    {
      "name": "Authentication",
      "methods": [
        "GetEntityToken"
      ]
    },
    {
      "name": "Object",
      "methods": [
        "GetObjects",
        "SetObjects"
      ]
    }
  ],
  "calls": [
    {
      "name": "GetEntityToken",
      "summary": "Method to exchange a legacy AuthenticationTicket or title SecretKey for an Entity Token.",
      "requestDetails": "Request has no parameters, however this API must be called with X-SecretKey, X-Authentication or X-EntityToken headers. If sending X-EntityToken the account will be marked as freshly logged in and will issue a new token. If using X-Authentication or X-EntityToken the issued ticket cannot be expired.",
      "subgroup": "Authentication",
      "titleTiers": null,
      "url": "/Authentication/GetEntityToken",
      "auth": "None",
      "method": "POST",
      "request": "GetEntityTokenRequest",
      "requestExample": "{}",
      "result": "GetEntityTokenResponse",
      "resultExample": "",
      "AllInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "NotAuthenticated",
        "EntityTokenExpired",
        "EntityTokenInvalid",
        "EntityTokenRevoked"
      ]
    },
    {
      "name": "GetObjects",
      "summary": "Retrieves objects from an entity's profile.",
      "requestDetails": "Gets JSON objects from an entity profile and returns it. ",
      "subgroup": "Object",
      "titleTiers": null,
      "url": "/Object/GetObjects",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetObjectsRequest",
      "requestExample": "{\r\n  \"EntityType\": \"TitlePlayerAccount\",\r\n  \"EntityId\": \"ABC90712ABC\"\r\n}",
      "result": "GetObjectsResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"EntityType\": \"TitlePlayerAccount\",\r\n    \"EntityId\": \"ABC1234ABC\",\r\n    \"ProfileVersion\": 17,\r\n    \"Objects\": [\r\n      {\r\n        \"ObjectName\": \"gameState\",\r\n        \"EscapedDataObject\": \"{ \\\"Property\\\": { \\\"ValueName\\\": 5 } }\"\r\n      }\r\n    ]\r\n  }\r\n}",
      "AllInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "Object/SetObjects"
      ],
      "errors": [
        "NotAuthenticated",
        "ProfileDoesNotExist",
        "NotAuthorized"
      ]
    },
    {
      "name": "GetProfile",
      "summary": "Retrieves the entity's profile.",
      "requestDetails": "Given an entity type and entity identifier will retrieve the profile from the entity store. If the profile being retrieved is the caller's self then the read operation is consistent, if not it is inconsistent read. An inconsistent read means that we do not guarantee all committed writes have occurred before reading the profile, allowing for a stale read. If consistency is important the Version Number on the result can be used to compare what written version of the profile any reader has.",
      "subgroup": "Account Management",
      "titleTiers": null,
      "url": "/Profile/GetProfile",
      "auth": "EntityToken",
      "method": "POST",
      "request": "GetEntityProfileRequest",
      "requestExample": "{}",
      "result": "GetEntityProfileResponse",
      "resultExample": "",
      "AllInclusiveFlags": [
        "Beta"
      ],
      "errors": [
        "NotAuthenticated",
        "ProfileDoesNotExist",
        "NotAuthorized"
      ]
    },
    {
      "name": "SetObjects",
      "summary": "Sets objects on an entity's profile.",
      "requestDetails": "Sets JSON objects on the requested entity profile. May include a version number to be used to perform optimistic concurrency operations during update. If the current version differs from the version in the request the request will be ignored. If no version is set on the request then the value will always be updated. Using the version value does not guarantee a write though, ConcurrentEditError may still occur if multiple clients are attempting to update the same profile. ",
      "subgroup": "Object",
      "titleTiers": null,
      "url": "/Object/SetObjects",
      "auth": "EntityToken",
      "method": "POST",
      "request": "SetObjectsRequest",
      "requestExample": "{\r\n  \"EntityType\": \"TitleUser\",\r\n  \"EntityId\": \"A8140AB9109712B\",\r\n  \"ExpectedProfileVersion\": 5,\r\n  \"Objects\": [\r\n    {\r\n      \"ObjectName\": \"SaveSate\",\r\n      \"DataObject\": {\r\n        \"PlayerDetails\": {\r\n          \"LastMissionSuccess\": \"2017-06-15T11:05:19Z\",\r\n          \"LastMissionFailure\": \"2017-06-12T11:05:19Z\",\r\n          \"MapPosition\": [\r\n            22.0,\r\n            37.78\r\n          ],\r\n          \"IsPaidUpgrade\": true\r\n        },\r\n        \"GameSettings\": {\r\n          \"Screen\": \"FriendsList\",\r\n          \"Favorites\": [\r\n            \"Place 1\",\r\n            \"Place 2\"\r\n          ]\r\n        }\r\n      },\r\n      \"SimpleStatements\": [\r\n        {\r\n          \"Action\": \"Read\",\r\n          \"Effect\": \"Allow\",\r\n          \"FriendPermission\": true\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
      "result": "SetObjectsResponse",
      "resultExample": "{\r\n  \"code\": 200,\r\n  \"status\": \"OK\",\r\n  \"data\": {\r\n    \"SetResults\": [\r\n      {\r\n        \"SetResult\": \"Created\"\r\n      }\r\n    ],\r\n    \"ProfileVersion\": 5\r\n  }\r\n}",
      "AllInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "Object/GetObjects"
      ],
      "errors": [
        "NotAuthenticated",
        "ProfileDoesNotExist",
        "NotAuthorized"
      ]
    },
    {
      "name": "SetProfilePolicy",
      "summary": "Sets the profiles access policy",
      "requestDetails": "This will set the access policy statements on the given entity profile. This is not additive, any existing statements will be replace with the statements in this request.",
      "subgroup": "Account Management",
      "titleTiers": null,
      "url": "/Profile/SetProfilePolicy",
      "auth": "EntityToken",
      "method": "POST",
      "request": "SetEntityProfilePolicyRequest",
      "requestExample": "{}",
      "result": "SetEntityProfilePolicyResponse",
      "resultExample": "",
      "AllInclusiveFlags": [
        "Beta"
      ],
      "seeAlso": [
        "Profile/GetProfile"
      ],
      "errors": [
        "NotAuthenticated",
        "ProfileDoesNotExist",
        "NotAuthorized"
      ]
    }
  ],
  "errors": {
    "Success": {
      "id": 0,
      "name": "Success"
    },
    "InvalidParams": {
      "id": 1000,
      "name": "InvalidParams"
    },
    "AccountNotFound": {
      "id": 1001,
      "name": "AccountNotFound"
    },
    "AccountBanned": {
      "id": 1002,
      "name": "AccountBanned"
    },
    "InvalidUsernameOrPassword": {
      "id": 1003,
      "name": "InvalidUsernameOrPassword"
    },
    "InvalidTitleId": {
      "id": 1004,
      "name": "InvalidTitleId"
    },
    "InvalidEmailAddress": {
      "id": 1005,
      "name": "InvalidEmailAddress"
    },
    "EmailAddressNotAvailable": {
      "id": 1006,
      "name": "EmailAddressNotAvailable"
    },
    "InvalidUsername": {
      "id": 1007,
      "name": "InvalidUsername"
    },
    "InvalidPassword": {
      "id": 1008,
      "name": "InvalidPassword"
    },
    "UsernameNotAvailable": {
      "id": 1009,
      "name": "UsernameNotAvailable"
    },
    "InvalidSteamTicket": {
      "id": 1010,
      "name": "InvalidSteamTicket"
    },
    "AccountAlreadyLinked": {
      "id": 1011,
      "name": "AccountAlreadyLinked"
    },
    "LinkedAccountAlreadyClaimed": {
      "id": 1012,
      "name": "LinkedAccountAlreadyClaimed"
    },
    "InvalidFacebookToken": {
      "id": 1013,
      "name": "InvalidFacebookToken"
    },
    "AccountNotLinked": {
      "id": 1014,
      "name": "AccountNotLinked"
    },
    "FailedByPaymentProvider": {
      "id": 1015,
      "name": "FailedByPaymentProvider"
    },
    "CouponCodeNotFound": {
      "id": 1016,
      "name": "CouponCodeNotFound"
    },
    "InvalidContainerItem": {
      "id": 1017,
      "name": "InvalidContainerItem"
    },
    "ContainerNotOwned": {
      "id": 1018,
      "name": "ContainerNotOwned"
    },
    "KeyNotOwned": {
      "id": 1019,
      "name": "KeyNotOwned"
    },
    "InvalidItemIdInTable": {
      "id": 1020,
      "name": "InvalidItemIdInTable"
    },
    "InvalidReceipt": {
      "id": 1021,
      "name": "InvalidReceipt"
    },
    "ReceiptAlreadyUsed": {
      "id": 1022,
      "name": "ReceiptAlreadyUsed"
    },
    "ReceiptCancelled": {
      "id": 1023,
      "name": "ReceiptCancelled"
    },
    "GameNotFound": {
      "id": 1024,
      "name": "GameNotFound"
    },
    "GameModeNotFound": {
      "id": 1025,
      "name": "GameModeNotFound"
    },
    "InvalidGoogleToken": {
      "id": 1026,
      "name": "InvalidGoogleToken"
    },
    "UserIsNotPartOfDeveloper": {
      "id": 1027,
      "name": "UserIsNotPartOfDeveloper"
    },
    "InvalidTitleForDeveloper": {
      "id": 1028,
      "name": "InvalidTitleForDeveloper"
    },
    "TitleNameConflicts": {
      "id": 1029,
      "name": "TitleNameConflicts"
    },
    "UserisNotValid": {
      "id": 1030,
      "name": "UserisNotValid"
    },
    "ValueAlreadyExists": {
      "id": 1031,
      "name": "ValueAlreadyExists"
    },
    "BuildNotFound": {
      "id": 1032,
      "name": "BuildNotFound"
    },
    "PlayerNotInGame": {
      "id": 1033,
      "name": "PlayerNotInGame"
    },
    "InvalidTicket": {
      "id": 1034,
      "name": "InvalidTicket"
    },
    "InvalidDeveloper": {
      "id": 1035,
      "name": "InvalidDeveloper"
    },
    "InvalidOrderInfo": {
      "id": 1036,
      "name": "InvalidOrderInfo"
    },
    "RegistrationIncomplete": {
      "id": 1037,
      "name": "RegistrationIncomplete"
    },
    "InvalidPlatform": {
      "id": 1038,
      "name": "InvalidPlatform"
    },
    "UnknownError": {
      "id": 1039,
      "name": "UnknownError"
    },
    "SteamApplicationNotOwned": {
      "id": 1040,
      "name": "SteamApplicationNotOwned"
    },
    "WrongSteamAccount": {
      "id": 1041,
      "name": "WrongSteamAccount"
    },
    "TitleNotActivated": {
      "id": 1042,
      "name": "TitleNotActivated"
    },
    "RegistrationSessionNotFound": {
      "id": 1043,
      "name": "RegistrationSessionNotFound"
    },
    "NoSuchMod": {
      "id": 1044,
      "name": "NoSuchMod"
    },
    "FileNotFound": {
      "id": 1045,
      "name": "FileNotFound"
    },
    "DuplicateEmail": {
      "id": 1046,
      "name": "DuplicateEmail"
    },
    "ItemNotFound": {
      "id": 1047,
      "name": "ItemNotFound"
    },
    "ItemNotOwned": {
      "id": 1048,
      "name": "ItemNotOwned"
    },
    "ItemNotRecycleable": {
      "id": 1049,
      "name": "ItemNotRecycleable"
    },
    "ItemNotAffordable": {
      "id": 1050,
      "name": "ItemNotAffordable"
    },
    "InvalidVirtualCurrency": {
      "id": 1051,
      "name": "InvalidVirtualCurrency"
    },
    "WrongVirtualCurrency": {
      "id": 1052,
      "name": "WrongVirtualCurrency"
    },
    "WrongPrice": {
      "id": 1053,
      "name": "WrongPrice"
    },
    "NonPositiveValue": {
      "id": 1054,
      "name": "NonPositiveValue"
    },
    "InvalidRegion": {
      "id": 1055,
      "name": "InvalidRegion"
    },
    "RegionAtCapacity": {
      "id": 1056,
      "name": "RegionAtCapacity"
    },
    "ServerFailedToStart": {
      "id": 1057,
      "name": "ServerFailedToStart"
    },
    "NameNotAvailable": {
      "id": 1058,
      "name": "NameNotAvailable"
    },
    "InsufficientFunds": {
      "id": 1059,
      "name": "InsufficientFunds"
    },
    "InvalidDeviceID": {
      "id": 1060,
      "name": "InvalidDeviceID"
    },
    "InvalidPushNotificationToken": {
      "id": 1061,
      "name": "InvalidPushNotificationToken"
    },
    "NoRemainingUses": {
      "id": 1062,
      "name": "NoRemainingUses"
    },
    "InvalidPaymentProvider": {
      "id": 1063,
      "name": "InvalidPaymentProvider"
    },
    "PurchaseInitializationFailure": {
      "id": 1064,
      "name": "PurchaseInitializationFailure"
    },
    "DuplicateUsername": {
      "id": 1065,
      "name": "DuplicateUsername"
    },
    "InvalidBuyerInfo": {
      "id": 1066,
      "name": "InvalidBuyerInfo"
    },
    "NoGameModeParamsSet": {
      "id": 1067,
      "name": "NoGameModeParamsSet"
    },
    "BodyTooLarge": {
      "id": 1068,
      "name": "BodyTooLarge"
    },
    "ReservedWordInBody": {
      "id": 1069,
      "name": "ReservedWordInBody"
    },
    "InvalidTypeInBody": {
      "id": 1070,
      "name": "InvalidTypeInBody"
    },
    "InvalidRequest": {
      "id": 1071,
      "name": "InvalidRequest"
    },
    "ReservedEventName": {
      "id": 1072,
      "name": "ReservedEventName"
    },
    "InvalidUserStatistics": {
      "id": 1073,
      "name": "InvalidUserStatistics"
    },
    "NotAuthenticated": {
      "id": 1074,
      "name": "NotAuthenticated"
    },
    "StreamAlreadyExists": {
      "id": 1075,
      "name": "StreamAlreadyExists"
    },
    "ErrorCreatingStream": {
      "id": 1076,
      "name": "ErrorCreatingStream"
    },
    "StreamNotFound": {
      "id": 1077,
      "name": "StreamNotFound"
    },
    "InvalidAccount": {
      "id": 1078,
      "name": "InvalidAccount"
    },
    "PurchaseDoesNotExist": {
      "id": 1080,
      "name": "PurchaseDoesNotExist"
    },
    "InvalidPurchaseTransactionStatus": {
      "id": 1081,
      "name": "InvalidPurchaseTransactionStatus"
    },
    "APINotEnabledForGameClientAccess": {
      "id": 1082,
      "name": "APINotEnabledForGameClientAccess"
    },
    "NoPushNotificationARNForTitle": {
      "id": 1083,
      "name": "NoPushNotificationARNForTitle"
    },
    "BuildAlreadyExists": {
      "id": 1084,
      "name": "BuildAlreadyExists"
    },
    "BuildPackageDoesNotExist": {
      "id": 1085,
      "name": "BuildPackageDoesNotExist"
    },
    "CustomAnalyticsEventsNotEnabledForTitle": {
      "id": 1087,
      "name": "CustomAnalyticsEventsNotEnabledForTitle"
    },
    "InvalidSharedGroupId": {
      "id": 1088,
      "name": "InvalidSharedGroupId"
    },
    "NotAuthorized": {
      "id": 1089,
      "name": "NotAuthorized"
    },
    "MissingTitleGoogleProperties": {
      "id": 1090,
      "name": "MissingTitleGoogleProperties"
    },
    "InvalidItemProperties": {
      "id": 1091,
      "name": "InvalidItemProperties"
    },
    "InvalidPSNAuthCode": {
      "id": 1092,
      "name": "InvalidPSNAuthCode"
    },
    "InvalidItemId": {
      "id": 1093,
      "name": "InvalidItemId"
    },
    "PushNotEnabledForAccount": {
      "id": 1094,
      "name": "PushNotEnabledForAccount"
    },
    "PushServiceError": {
      "id": 1095,
      "name": "PushServiceError"
    },
    "ReceiptDoesNotContainInAppItems": {
      "id": 1096,
      "name": "ReceiptDoesNotContainInAppItems"
    },
    "ReceiptContainsMultipleInAppItems": {
      "id": 1097,
      "name": "ReceiptContainsMultipleInAppItems"
    },
    "InvalidBundleID": {
      "id": 1098,
      "name": "InvalidBundleID"
    },
    "JavascriptException": {
      "id": 1099,
      "name": "JavascriptException"
    },
    "InvalidSessionTicket": {
      "id": 1100,
      "name": "InvalidSessionTicket"
    },
    "UnableToConnectToDatabase": {
      "id": 1101,
      "name": "UnableToConnectToDatabase"
    },
    "InternalServerError": {
      "id": 1110,
      "name": "InternalServerError"
    },
    "InvalidReportDate": {
      "id": 1111,
      "name": "InvalidReportDate"
    },
    "ReportNotAvailable": {
      "id": 1112,
      "name": "ReportNotAvailable"
    },
    "DatabaseThroughputExceeded": {
      "id": 1113,
      "name": "DatabaseThroughputExceeded"
    },
    "InvalidGameTicket": {
      "id": 1115,
      "name": "InvalidGameTicket"
    },
    "ExpiredGameTicket": {
      "id": 1116,
      "name": "ExpiredGameTicket"
    },
    "GameTicketDoesNotMatchLobby": {
      "id": 1117,
      "name": "GameTicketDoesNotMatchLobby"
    },
    "LinkedDeviceAlreadyClaimed": {
      "id": 1118,
      "name": "LinkedDeviceAlreadyClaimed"
    },
    "DeviceAlreadyLinked": {
      "id": 1119,
      "name": "DeviceAlreadyLinked"
    },
    "DeviceNotLinked": {
      "id": 1120,
      "name": "DeviceNotLinked"
    },
    "PartialFailure": {
      "id": 1121,
      "name": "PartialFailure"
    },
    "PublisherNotSet": {
      "id": 1122,
      "name": "PublisherNotSet"
    },
    "ServiceUnavailable": {
      "id": 1123,
      "name": "ServiceUnavailable"
    },
    "VersionNotFound": {
      "id": 1124,
      "name": "VersionNotFound"
    },
    "RevisionNotFound": {
      "id": 1125,
      "name": "RevisionNotFound"
    },
    "InvalidPublisherId": {
      "id": 1126,
      "name": "InvalidPublisherId"
    },
    "DownstreamServiceUnavailable": {
      "id": 1127,
      "name": "DownstreamServiceUnavailable"
    },
    "APINotIncludedInTitleUsageTier": {
      "id": 1128,
      "name": "APINotIncludedInTitleUsageTier"
    },
    "DAULimitExceeded": {
      "id": 1129,
      "name": "DAULimitExceeded"
    },
    "APIRequestLimitExceeded": {
      "id": 1130,
      "name": "APIRequestLimitExceeded"
    },
    "InvalidAPIEndpoint": {
      "id": 1131,
      "name": "InvalidAPIEndpoint"
    },
    "BuildNotAvailable": {
      "id": 1132,
      "name": "BuildNotAvailable"
    },
    "ConcurrentEditError": {
      "id": 1133,
      "name": "ConcurrentEditError"
    },
    "ContentNotFound": {
      "id": 1134,
      "name": "ContentNotFound"
    },
    "CharacterNotFound": {
      "id": 1135,
      "name": "CharacterNotFound"
    },
    "CloudScriptNotFound": {
      "id": 1136,
      "name": "CloudScriptNotFound"
    },
    "ContentQuotaExceeded": {
      "id": 1137,
      "name": "ContentQuotaExceeded"
    },
    "InvalidCharacterStatistics": {
      "id": 1138,
      "name": "InvalidCharacterStatistics"
    },
    "PhotonNotEnabledForTitle": {
      "id": 1139,
      "name": "PhotonNotEnabledForTitle"
    },
    "PhotonApplicationNotFound": {
      "id": 1140,
      "name": "PhotonApplicationNotFound"
    },
    "PhotonApplicationNotAssociatedWithTitle": {
      "id": 1141,
      "name": "PhotonApplicationNotAssociatedWithTitle"
    },
    "InvalidEmailOrPassword": {
      "id": 1142,
      "name": "InvalidEmailOrPassword"
    },
    "FacebookAPIError": {
      "id": 1143,
      "name": "FacebookAPIError"
    },
    "InvalidContentType": {
      "id": 1144,
      "name": "InvalidContentType"
    },
    "KeyLengthExceeded": {
      "id": 1145,
      "name": "KeyLengthExceeded"
    },
    "DataLengthExceeded": {
      "id": 1146,
      "name": "DataLengthExceeded"
    },
    "TooManyKeys": {
      "id": 1147,
      "name": "TooManyKeys"
    },
    "FreeTierCannotHaveVirtualCurrency": {
      "id": 1148,
      "name": "FreeTierCannotHaveVirtualCurrency"
    },
    "MissingAmazonSharedKey": {
      "id": 1149,
      "name": "MissingAmazonSharedKey"
    },
    "AmazonValidationError": {
      "id": 1150,
      "name": "AmazonValidationError"
    },
    "InvalidPSNIssuerId": {
      "id": 1151,
      "name": "InvalidPSNIssuerId"
    },
    "PSNInaccessible": {
      "id": 1152,
      "name": "PSNInaccessible"
    },
    "ExpiredAuthToken": {
      "id": 1153,
      "name": "ExpiredAuthToken"
    },
    "FailedToGetEntitlements": {
      "id": 1154,
      "name": "FailedToGetEntitlements"
    },
    "FailedToConsumeEntitlement": {
      "id": 1155,
      "name": "FailedToConsumeEntitlement"
    },
    "TradeAcceptingUserNotAllowed": {
      "id": 1156,
      "name": "TradeAcceptingUserNotAllowed"
    },
    "TradeInventoryItemIsAssignedToCharacter": {
      "id": 1157,
      "name": "TradeInventoryItemIsAssignedToCharacter"
    },
    "TradeInventoryItemIsBundle": {
      "id": 1158,
      "name": "TradeInventoryItemIsBundle"
    },
    "TradeStatusNotValidForCancelling": {
      "id": 1159,
      "name": "TradeStatusNotValidForCancelling"
    },
    "TradeStatusNotValidForAccepting": {
      "id": 1160,
      "name": "TradeStatusNotValidForAccepting"
    },
    "TradeDoesNotExist": {
      "id": 1161,
      "name": "TradeDoesNotExist"
    },
    "TradeCancelled": {
      "id": 1162,
      "name": "TradeCancelled"
    },
    "TradeAlreadyFilled": {
      "id": 1163,
      "name": "TradeAlreadyFilled"
    },
    "TradeWaitForStatusTimeout": {
      "id": 1164,
      "name": "TradeWaitForStatusTimeout"
    },
    "TradeInventoryItemExpired": {
      "id": 1165,
      "name": "TradeInventoryItemExpired"
    },
    "TradeMissingOfferedAndAcceptedItems": {
      "id": 1166,
      "name": "TradeMissingOfferedAndAcceptedItems"
    },
    "TradeAcceptedItemIsBundle": {
      "id": 1167,
      "name": "TradeAcceptedItemIsBundle"
    },
    "TradeAcceptedItemIsStackable": {
      "id": 1168,
      "name": "TradeAcceptedItemIsStackable"
    },
    "TradeInventoryItemInvalidStatus": {
      "id": 1169,
      "name": "TradeInventoryItemInvalidStatus"
    },
    "TradeAcceptedCatalogItemInvalid": {
      "id": 1170,
      "name": "TradeAcceptedCatalogItemInvalid"
    },
    "TradeAllowedUsersInvalid": {
      "id": 1171,
      "name": "TradeAllowedUsersInvalid"
    },
    "TradeInventoryItemDoesNotExist": {
      "id": 1172,
      "name": "TradeInventoryItemDoesNotExist"
    },
    "TradeInventoryItemIsConsumed": {
      "id": 1173,
      "name": "TradeInventoryItemIsConsumed"
    },
    "TradeInventoryItemIsStackable": {
      "id": 1174,
      "name": "TradeInventoryItemIsStackable"
    },
    "TradeAcceptedItemsMismatch": {
      "id": 1175,
      "name": "TradeAcceptedItemsMismatch"
    },
    "InvalidKongregateToken": {
      "id": 1176,
      "name": "InvalidKongregateToken"
    },
    "FeatureNotConfiguredForTitle": {
      "id": 1177,
      "name": "FeatureNotConfiguredForTitle"
    },
    "NoMatchingCatalogItemForReceipt": {
      "id": 1178,
      "name": "NoMatchingCatalogItemForReceipt"
    },
    "InvalidCurrencyCode": {
      "id": 1179,
      "name": "InvalidCurrencyCode"
    },
    "NoRealMoneyPriceForCatalogItem": {
      "id": 1180,
      "name": "NoRealMoneyPriceForCatalogItem"
    },
    "TradeInventoryItemIsNotTradable": {
      "id": 1181,
      "name": "TradeInventoryItemIsNotTradable"
    },
    "TradeAcceptedCatalogItemIsNotTradable": {
      "id": 1182,
      "name": "TradeAcceptedCatalogItemIsNotTradable"
    },
    "UsersAlreadyFriends": {
      "id": 1183,
      "name": "UsersAlreadyFriends"
    },
    "LinkedIdentifierAlreadyClaimed": {
      "id": 1184,
      "name": "LinkedIdentifierAlreadyClaimed"
    },
    "CustomIdNotLinked": {
      "id": 1185,
      "name": "CustomIdNotLinked"
    },
    "TotalDataSizeExceeded": {
      "id": 1186,
      "name": "TotalDataSizeExceeded"
    },
    "DeleteKeyConflict": {
      "id": 1187,
      "name": "DeleteKeyConflict"
    },
    "InvalidXboxLiveToken": {
      "id": 1188,
      "name": "InvalidXboxLiveToken"
    },
    "ExpiredXboxLiveToken": {
      "id": 1189,
      "name": "ExpiredXboxLiveToken"
    },
    "ResettableStatisticVersionRequired": {
      "id": 1190,
      "name": "ResettableStatisticVersionRequired"
    },
    "NotAuthorizedByTitle": {
      "id": 1191,
      "name": "NotAuthorizedByTitle"
    },
    "NoPartnerEnabled": {
      "id": 1192,
      "name": "NoPartnerEnabled"
    },
    "InvalidPartnerResponse": {
      "id": 1193,
      "name": "InvalidPartnerResponse"
    },
    "APINotEnabledForGameServerAccess": {
      "id": 1194,
      "name": "APINotEnabledForGameServerAccess"
    },
    "StatisticNotFound": {
      "id": 1195,
      "name": "StatisticNotFound"
    },
    "StatisticNameConflict": {
      "id": 1196,
      "name": "StatisticNameConflict"
    },
    "StatisticVersionClosedForWrites": {
      "id": 1197,
      "name": "StatisticVersionClosedForWrites"
    },
    "StatisticVersionInvalid": {
      "id": 1198,
      "name": "StatisticVersionInvalid"
    },
    "APIClientRequestRateLimitExceeded": {
      "id": 1199,
      "name": "APIClientRequestRateLimitExceeded"
    },
    "InvalidJSONContent": {
      "id": 1200,
      "name": "InvalidJSONContent"
    },
    "InvalidDropTable": {
      "id": 1201,
      "name": "InvalidDropTable"
    },
    "StatisticVersionAlreadyIncrementedForScheduledInterval": {
      "id": 1202,
      "name": "StatisticVersionAlreadyIncrementedForScheduledInterval"
    },
    "StatisticCountLimitExceeded": {
      "id": 1203,
      "name": "StatisticCountLimitExceeded"
    },
    "StatisticVersionIncrementRateExceeded": {
      "id": 1204,
      "name": "StatisticVersionIncrementRateExceeded"
    },
    "ContainerKeyInvalid": {
      "id": 1205,
      "name": "ContainerKeyInvalid"
    },
    "CloudScriptExecutionTimeLimitExceeded": {
      "id": 1206,
      "name": "CloudScriptExecutionTimeLimitExceeded"
    },
    "NoWritePermissionsForEvent": {
      "id": 1207,
      "name": "NoWritePermissionsForEvent"
    },
    "CloudScriptFunctionArgumentSizeExceeded": {
      "id": 1208,
      "name": "CloudScriptFunctionArgumentSizeExceeded"
    },
    "CloudScriptAPIRequestCountExceeded": {
      "id": 1209,
      "name": "CloudScriptAPIRequestCountExceeded"
    },
    "CloudScriptAPIRequestError": {
      "id": 1210,
      "name": "CloudScriptAPIRequestError"
    },
    "CloudScriptHTTPRequestError": {
      "id": 1211,
      "name": "CloudScriptHTTPRequestError"
    },
    "InsufficientGuildRole": {
      "id": 1212,
      "name": "InsufficientGuildRole"
    },
    "GuildNotFound": {
      "id": 1213,
      "name": "GuildNotFound"
    },
    "OverLimit": {
      "id": 1214,
      "name": "OverLimit"
    },
    "EventNotFound": {
      "id": 1215,
      "name": "EventNotFound"
    },
    "InvalidEventField": {
      "id": 1216,
      "name": "InvalidEventField"
    },
    "InvalidEventName": {
      "id": 1217,
      "name": "InvalidEventName"
    },
    "CatalogNotConfigured": {
      "id": 1218,
      "name": "CatalogNotConfigured"
    },
    "OperationNotSupportedForPlatform": {
      "id": 1219,
      "name": "OperationNotSupportedForPlatform"
    },
    "SegmentNotFound": {
      "id": 1220,
      "name": "SegmentNotFound"
    },
    "StoreNotFound": {
      "id": 1221,
      "name": "StoreNotFound"
    },
    "InvalidStatisticName": {
      "id": 1222,
      "name": "InvalidStatisticName"
    },
    "TitleNotQualifiedForLimit": {
      "id": 1223,
      "name": "TitleNotQualifiedForLimit"
    },
    "InvalidServiceLimitLevel": {
      "id": 1224,
      "name": "InvalidServiceLimitLevel"
    },
    "ServiceLimitLevelInTransition": {
      "id": 1225,
      "name": "ServiceLimitLevelInTransition"
    },
    "CouponAlreadyRedeemed": {
      "id": 1226,
      "name": "CouponAlreadyRedeemed"
    },
    "GameServerBuildSizeLimitExceeded": {
      "id": 1227,
      "name": "GameServerBuildSizeLimitExceeded"
    },
    "GameServerBuildCountLimitExceeded": {
      "id": 1228,
      "name": "GameServerBuildCountLimitExceeded"
    },
    "VirtualCurrencyCountLimitExceeded": {
      "id": 1229,
      "name": "VirtualCurrencyCountLimitExceeded"
    },
    "VirtualCurrencyCodeExists": {
      "id": 1230,
      "name": "VirtualCurrencyCodeExists"
    },
    "TitleNewsItemCountLimitExceeded": {
      "id": 1231,
      "name": "TitleNewsItemCountLimitExceeded"
    },
    "InvalidTwitchToken": {
      "id": 1232,
      "name": "InvalidTwitchToken"
    },
    "TwitchResponseError": {
      "id": 1233,
      "name": "TwitchResponseError"
    },
    "ProfaneDisplayName": {
      "id": 1234,
      "name": "ProfaneDisplayName"
    },
    "UserAlreadyAdded": {
      "id": 1235,
      "name": "UserAlreadyAdded"
    },
    "InvalidVirtualCurrencyCode": {
      "id": 1236,
      "name": "InvalidVirtualCurrencyCode"
    },
    "VirtualCurrencyCannotBeDeleted": {
      "id": 1237,
      "name": "VirtualCurrencyCannotBeDeleted"
    },
    "IdentifierAlreadyClaimed": {
      "id": 1238,
      "name": "IdentifierAlreadyClaimed"
    },
    "IdentifierNotLinked": {
      "id": 1239,
      "name": "IdentifierNotLinked"
    },
    "InvalidContinuationToken": {
      "id": 1240,
      "name": "InvalidContinuationToken"
    },
    "ExpiredContinuationToken": {
      "id": 1241,
      "name": "ExpiredContinuationToken"
    },
    "InvalidSegment": {
      "id": 1242,
      "name": "InvalidSegment"
    },
    "InvalidSessionId": {
      "id": 1243,
      "name": "InvalidSessionId"
    },
    "SessionLogNotFound": {
      "id": 1244,
      "name": "SessionLogNotFound"
    },
    "InvalidSearchTerm": {
      "id": 1245,
      "name": "InvalidSearchTerm"
    },
    "TwoFactorAuthenticationTokenRequired": {
      "id": 1246,
      "name": "TwoFactorAuthenticationTokenRequired"
    },
    "GameServerHostCountLimitExceeded": {
      "id": 1247,
      "name": "GameServerHostCountLimitExceeded"
    },
    "PlayerTagCountLimitExceeded": {
      "id": 1248,
      "name": "PlayerTagCountLimitExceeded"
    },
    "RequestAlreadyRunning": {
      "id": 1249,
      "name": "RequestAlreadyRunning"
    },
    "ActionGroupNotFound": {
      "id": 1250,
      "name": "ActionGroupNotFound"
    },
    "MaximumSegmentBulkActionJobsRunning": {
      "id": 1251,
      "name": "MaximumSegmentBulkActionJobsRunning"
    },
    "NoActionsOnPlayersInSegmentJob": {
      "id": 1252,
      "name": "NoActionsOnPlayersInSegmentJob"
    },
    "DuplicateStatisticName": {
      "id": 1253,
      "name": "DuplicateStatisticName"
    },
    "ScheduledTaskNameConflict": {
      "id": 1254,
      "name": "ScheduledTaskNameConflict"
    },
    "ScheduledTaskCreateConflict": {
      "id": 1255,
      "name": "ScheduledTaskCreateConflict"
    },
    "InvalidScheduledTaskName": {
      "id": 1256,
      "name": "InvalidScheduledTaskName"
    },
    "InvalidTaskSchedule": {
      "id": 1257,
      "name": "InvalidTaskSchedule"
    },
    "SteamNotEnabledForTitle": {
      "id": 1258,
      "name": "SteamNotEnabledForTitle"
    },
    "LimitNotAnUpgradeOption": {
      "id": 1259,
      "name": "LimitNotAnUpgradeOption"
    },
    "NoSecretKeyEnabledForCloudScript": {
      "id": 1260,
      "name": "NoSecretKeyEnabledForCloudScript"
    },
    "TaskNotFound": {
      "id": 1261,
      "name": "TaskNotFound"
    },
    "TaskInstanceNotFound": {
      "id": 1262,
      "name": "TaskInstanceNotFound"
    },
    "InvalidIdentityProviderId": {
      "id": 1263,
      "name": "InvalidIdentityProviderId"
    },
    "MisconfiguredIdentityProvider": {
      "id": 1264,
      "name": "MisconfiguredIdentityProvider"
    },
    "InvalidScheduledTaskType": {
      "id": 1265,
      "name": "InvalidScheduledTaskType"
    },
    "BillingInformationRequired": {
      "id": 1266,
      "name": "BillingInformationRequired"
    },
    "LimitedEditionItemUnavailable": {
      "id": 1267,
      "name": "LimitedEditionItemUnavailable"
    },
    "InvalidAdPlacementAndReward": {
      "id": 1268,
      "name": "InvalidAdPlacementAndReward"
    },
    "AllAdPlacementViewsAlreadyConsumed": {
      "id": 1269,
      "name": "AllAdPlacementViewsAlreadyConsumed"
    },
    "GoogleOAuthNotConfiguredForTitle": {
      "id": 1270,
      "name": "GoogleOAuthNotConfiguredForTitle"
    },
    "GoogleOAuthError": {
      "id": 1271,
      "name": "GoogleOAuthError"
    },
    "UserNotFriend": {
      "id": 1272,
      "name": "UserNotFriend"
    },
    "InvalidSignature": {
      "id": 1273,
      "name": "InvalidSignature"
    },
    "InvalidPublicKey": {
      "id": 1274,
      "name": "InvalidPublicKey"
    },
    "GoogleOAuthNoIdTokenIncludedInResponse": {
      "id": 1275,
      "name": "GoogleOAuthNoIdTokenIncludedInResponse"
    },
    "StatisticUpdateInProgress": {
      "id": 1276,
      "name": "StatisticUpdateInProgress"
    },
    "LeaderboardVersionNotAvailable": {
      "id": 1277,
      "name": "LeaderboardVersionNotAvailable"
    },
    "StatisticAlreadyHasPrizeTable": {
      "id": 1279,
      "name": "StatisticAlreadyHasPrizeTable"
    },
    "PrizeTableHasOverlappingRanks": {
      "id": 1280,
      "name": "PrizeTableHasOverlappingRanks"
    },
    "PrizeTableHasMissingRanks": {
      "id": 1281,
      "name": "PrizeTableHasMissingRanks"
    },
    "PrizeTableRankStartsAtZero": {
      "id": 1282,
      "name": "PrizeTableRankStartsAtZero"
    },
    "InvalidStatistic": {
      "id": 1283,
      "name": "InvalidStatistic"
    },
    "ExpressionParseFailure": {
      "id": 1284,
      "name": "ExpressionParseFailure"
    },
    "ExpressionInvokeFailure": {
      "id": 1285,
      "name": "ExpressionInvokeFailure"
    },
    "ExpressionTooLong": {
      "id": 1286,
      "name": "ExpressionTooLong"
    },
    "DataUpdateRateExceeded": {
      "id": 1287,
      "name": "DataUpdateRateExceeded"
    },
    "RestrictedEmailDomain": {
      "id": 1288,
      "name": "RestrictedEmailDomain"
    },
    "EncryptionKeyDisabled": {
      "id": 1289,
      "name": "EncryptionKeyDisabled"
    },
    "EncryptionKeyMissing": {
      "id": 1290,
      "name": "EncryptionKeyMissing"
    },
    "EncryptionKeyBroken": {
      "id": 1291,
      "name": "EncryptionKeyBroken"
    },
    "NoSharedSecretKeyConfigured": {
      "id": 1292,
      "name": "NoSharedSecretKeyConfigured"
    },
    "SecretKeyNotFound": {
      "id": 1293,
      "name": "SecretKeyNotFound"
    },
    "PlayerSecretAlreadyConfigured": {
      "id": 1294,
      "name": "PlayerSecretAlreadyConfigured"
    },
    "APIRequestsDisabledForTitle": {
      "id": 1295,
      "name": "APIRequestsDisabledForTitle"
    },
    "InvalidSharedSecretKey": {
      "id": 1296,
      "name": "InvalidSharedSecretKey"
    },
    "PrizeTableHasNoRanks": {
      "id": 1297,
      "name": "PrizeTableHasNoRanks"
    },
    "ProfileDoesNotExist": {
      "id": 1298,
      "name": "ProfileDoesNotExist"
    },
    "ContentS3OriginBucketNotConfigured": {
      "id": 1299,
      "name": "ContentS3OriginBucketNotConfigured"
    },
    "InvalidEnvironmentForReceipt": {
      "id": 1300,
      "name": "InvalidEnvironmentForReceipt"
    },
    "EncryptedRequestNotAllowed": {
      "id": 1301,
      "name": "EncryptedRequestNotAllowed"
    },
    "SignedRequestNotAllowed": {
      "id": 1302,
      "name": "SignedRequestNotAllowed"
    },
    "RequestViewConstraintParamsNotAllowed": {
      "id": 1303,
      "name": "RequestViewConstraintParamsNotAllowed"
    },
    "BadPartnerConfiguration": {
      "id": 1304,
      "name": "BadPartnerConfiguration"
    },
    "XboxBPCertificateFailure": {
      "id": 1305,
      "name": "XboxBPCertificateFailure"
    },
    "XboxXASSExchangeFailure": {
      "id": 1306,
      "name": "XboxXASSExchangeFailure"
    },
    "InvalidEntityId": {
      "id": 1307,
      "name": "InvalidEntityId"
    },
    "StatisticValueAggregationOverflow": {
      "id": 1308,
      "name": "StatisticValueAggregationOverflow"
    },
    "EmailMessageFromAddressIsMissing": {
      "id": 1309,
      "name": "EmailMessageFromAddressIsMissing"
    },
    "EmailMessageToAddressIsMissing": {
      "id": 1310,
      "name": "EmailMessageToAddressIsMissing"
    },
    "SmtpServerAuthenticationError": {
      "id": 1311,
      "name": "SmtpServerAuthenticationError"
    },
    "SmtpServerLimitExceeded": {
      "id": 1312,
      "name": "SmtpServerLimitExceeded"
    },
    "SmtpServerInsufficientStorage": {
      "id": 1313,
      "name": "SmtpServerInsufficientStorage"
    },
    "SmtpServerCommunicationError": {
      "id": 1314,
      "name": "SmtpServerCommunicationError"
    },
    "SmtpServerGeneralFailure": {
      "id": 1315,
      "name": "SmtpServerGeneralFailure"
    },
    "EmailClientTimeout": {
      "id": 1316,
      "name": "EmailClientTimeout"
    },
    "EmailClientCanceledTask": {
      "id": 1317,
      "name": "EmailClientCanceledTask"
    },
    "EmailTemplateMissing": {
      "id": 1318,
      "name": "EmailTemplateMissing"
    },
    "InvalidHostForTitleId": {
      "id": 1319,
      "name": "InvalidHostForTitleId"
    },
    "EmailConfirmationTokenDoesNotExist": {
      "id": 1320,
      "name": "EmailConfirmationTokenDoesNotExist"
    },
    "EmailConfirmationTokenExpired": {
      "id": 1321,
      "name": "EmailConfirmationTokenExpired"
    },
    "AccountDeleted": {
      "id": 1322,
      "name": "AccountDeleted"
    },
    "PlayerSecretNotConfigured": {
      "id": 1323,
      "name": "PlayerSecretNotConfigured"
    },
    "InvalidSignatureTime": {
      "id": 1324,
      "name": "InvalidSignatureTime"
    },
    "NoContactEmailAddressFound": {
      "id": 1325,
      "name": "NoContactEmailAddressFound"
    },
    "InvalidAuthToken": {
      "id": 1326,
      "name": "InvalidAuthToken"
    },
    "AuthTokenDoesNotExist": {
      "id": 1327,
      "name": "AuthTokenDoesNotExist"
    },
    "AuthTokenExpired": {
      "id": 1328,
      "name": "AuthTokenExpired"
    },
    "AuthTokenAlreadyUsedToResetPassword": {
      "id": 1329,
      "name": "AuthTokenAlreadyUsedToResetPassword"
    },
    "MembershipNameTooLong": {
      "id": 1330,
      "name": "MembershipNameTooLong"
    },
    "MembershipNotFound": {
      "id": 1331,
      "name": "MembershipNotFound"
    },
    "GoogleServiceAccountInvalid": {
      "id": 1332,
      "name": "GoogleServiceAccountInvalid"
    },
    "GoogleServiceAccountParseFailure": {
      "id": 1333,
      "name": "GoogleServiceAccountParseFailure"
    },
    "EntityTokenMissing": {
      "id": 1334,
      "name": "EntityTokenMissing"
    },
    "EntityTokenInvalid": {
      "id": 1335,
      "name": "EntityTokenInvalid"
    },
    "EntityTokenExpired": {
      "id": 1336,
      "name": "EntityTokenExpired"
    },
    "EntityTokenRevoked": {
      "id": 1337,
      "name": "EntityTokenRevoked"
    },
    "InvalidProductForSubscription": {
      "id": 1338,
      "name": "InvalidProductForSubscription"
    },
    "XboxInaccessible": {
      "id": 1339,
      "name": "XboxInaccessible"
    },
    "SubscriptionAlreadyTaken": {
      "id": 1340,
      "name": "SubscriptionAlreadyTaken"
    },
    "SmtpAddonNotEnabled": {
      "id": 1341,
      "name": "SmtpAddonNotEnabled"
    },
    "APIConcurrentRequestLimitExceeded": {
      "id": 1342,
      "name": "APIConcurrentRequestLimitExceeded"
    },
    "XboxRejectedXSTSExchangeRequest": {
      "id": 1343,
      "name": "XboxRejectedXSTSExchangeRequest"
    },
    "VariableNotDefined": {
      "id": 1344,
      "name": "VariableNotDefined"
    },
    "TemplateVersionNotDefined": {
      "id": 1345,
      "name": "TemplateVersionNotDefined"
    },
    "FileTooLarge": {
      "id": 1346,
      "name": "FileTooLarge"
    },
    "TitleDeleted": {
      "id": 1347,
      "name": "TitleDeleted"
    },
    "TitleContainsUserAccounts": {
      "id": 1348,
      "name": "TitleContainsUserAccounts"
    },
    "TitleDeletionPlayerCleanupFailure": {
      "id": 1349,
      "name": "TitleDeletionPlayerCleanupFailure"
    },
    "EntityFileOperationPending": {
      "id": 1350,
      "name": "EntityFileOperationPending"
    },
    "NoEntityFileOperationPending": {
      "id": 1351,
      "name": "NoEntityFileOperationPending"
    },
    "EntityProfileVersionMismatch": {
      "id": 1352,
      "name": "EntityProfileVersionMismatch"
    },
    "TemplateVersionTooOld": {
      "id": 1353,
      "name": "TemplateVersionTooOld"
    },
    "MembershipDefinitionInUse": {
      "id": 1354,
      "name": "MembershipDefinitionInUse"
    },
    "PaymentPageNotConfigured": {
      "id": 1355,
      "name": "PaymentPageNotConfigured"
    },
    "FailedLoginAttemptRateLimitExceeded": {
      "id": 1356,
      "name": "FailedLoginAttemptRateLimitExceeded"
    }
  },
  "errorList": [
    "Success",
    "InvalidParams",
    "AccountNotFound",
    "AccountBanned",
    "InvalidUsernameOrPassword",
    "InvalidTitleId",
    "InvalidEmailAddress",
    "EmailAddressNotAvailable",
    "InvalidUsername",
    "InvalidPassword",
    "UsernameNotAvailable",
    "InvalidSteamTicket",
    "AccountAlreadyLinked",
    "LinkedAccountAlreadyClaimed",
    "InvalidFacebookToken",
    "AccountNotLinked",
    "FailedByPaymentProvider",
    "CouponCodeNotFound",
    "InvalidContainerItem",
    "ContainerNotOwned",
    "KeyNotOwned",
    "InvalidItemIdInTable",
    "InvalidReceipt",
    "ReceiptAlreadyUsed",
    "ReceiptCancelled",
    "GameNotFound",
    "GameModeNotFound",
    "InvalidGoogleToken",
    "UserIsNotPartOfDeveloper",
    "InvalidTitleForDeveloper",
    "TitleNameConflicts",
    "UserisNotValid",
    "ValueAlreadyExists",
    "BuildNotFound",
    "PlayerNotInGame",
    "InvalidTicket",
    "InvalidDeveloper",
    "InvalidOrderInfo",
    "RegistrationIncomplete",
    "InvalidPlatform",
    "UnknownError",
    "SteamApplicationNotOwned",
    "WrongSteamAccount",
    "TitleNotActivated",
    "RegistrationSessionNotFound",
    "NoSuchMod",
    "FileNotFound",
    "DuplicateEmail",
    "ItemNotFound",
    "ItemNotOwned",
    "ItemNotRecycleable",
    "ItemNotAffordable",
    "InvalidVirtualCurrency",
    "WrongVirtualCurrency",
    "WrongPrice",
    "NonPositiveValue",
    "InvalidRegion",
    "RegionAtCapacity",
    "ServerFailedToStart",
    "NameNotAvailable",
    "InsufficientFunds",
    "InvalidDeviceID",
    "InvalidPushNotificationToken",
    "NoRemainingUses",
    "InvalidPaymentProvider",
    "PurchaseInitializationFailure",
    "DuplicateUsername",
    "InvalidBuyerInfo",
    "NoGameModeParamsSet",
    "BodyTooLarge",
    "ReservedWordInBody",
    "InvalidTypeInBody",
    "InvalidRequest",
    "ReservedEventName",
    "InvalidUserStatistics",
    "NotAuthenticated",
    "StreamAlreadyExists",
    "ErrorCreatingStream",
    "StreamNotFound",
    "InvalidAccount",
    "PurchaseDoesNotExist",
    "InvalidPurchaseTransactionStatus",
    "APINotEnabledForGameClientAccess",
    "NoPushNotificationARNForTitle",
    "BuildAlreadyExists",
    "BuildPackageDoesNotExist",
    "CustomAnalyticsEventsNotEnabledForTitle",
    "InvalidSharedGroupId",
    "NotAuthorized",
    "MissingTitleGoogleProperties",
    "InvalidItemProperties",
    "InvalidPSNAuthCode",
    "InvalidItemId",
    "PushNotEnabledForAccount",
    "PushServiceError",
    "ReceiptDoesNotContainInAppItems",
    "ReceiptContainsMultipleInAppItems",
    "InvalidBundleID",
    "JavascriptException",
    "InvalidSessionTicket",
    "UnableToConnectToDatabase",
    "InternalServerError",
    "InvalidReportDate",
    "ReportNotAvailable",
    "DatabaseThroughputExceeded",
    "InvalidGameTicket",
    "ExpiredGameTicket",
    "GameTicketDoesNotMatchLobby",
    "LinkedDeviceAlreadyClaimed",
    "DeviceAlreadyLinked",
    "DeviceNotLinked",
    "PartialFailure",
    "PublisherNotSet",
    "ServiceUnavailable",
    "VersionNotFound",
    "RevisionNotFound",
    "InvalidPublisherId",
    "DownstreamServiceUnavailable",
    "APINotIncludedInTitleUsageTier",
    "DAULimitExceeded",
    "APIRequestLimitExceeded",
    "InvalidAPIEndpoint",
    "BuildNotAvailable",
    "ConcurrentEditError",
    "ContentNotFound",
    "CharacterNotFound",
    "CloudScriptNotFound",
    "ContentQuotaExceeded",
    "InvalidCharacterStatistics",
    "PhotonNotEnabledForTitle",
    "PhotonApplicationNotFound",
    "PhotonApplicationNotAssociatedWithTitle",
    "InvalidEmailOrPassword",
    "FacebookAPIError",
    "InvalidContentType",
    "KeyLengthExceeded",
    "DataLengthExceeded",
    "TooManyKeys",
    "FreeTierCannotHaveVirtualCurrency",
    "MissingAmazonSharedKey",
    "AmazonValidationError",
    "InvalidPSNIssuerId",
    "PSNInaccessible",
    "ExpiredAuthToken",
    "FailedToGetEntitlements",
    "FailedToConsumeEntitlement",
    "TradeAcceptingUserNotAllowed",
    "TradeInventoryItemIsAssignedToCharacter",
    "TradeInventoryItemIsBundle",
    "TradeStatusNotValidForCancelling",
    "TradeStatusNotValidForAccepting",
    "TradeDoesNotExist",
    "TradeCancelled",
    "TradeAlreadyFilled",
    "TradeWaitForStatusTimeout",
    "TradeInventoryItemExpired",
    "TradeMissingOfferedAndAcceptedItems",
    "TradeAcceptedItemIsBundle",
    "TradeAcceptedItemIsStackable",
    "TradeInventoryItemInvalidStatus",
    "TradeAcceptedCatalogItemInvalid",
    "TradeAllowedUsersInvalid",
    "TradeInventoryItemDoesNotExist",
    "TradeInventoryItemIsConsumed",
    "TradeInventoryItemIsStackable",
    "TradeAcceptedItemsMismatch",
    "InvalidKongregateToken",
    "FeatureNotConfiguredForTitle",
    "NoMatchingCatalogItemForReceipt",
    "InvalidCurrencyCode",
    "NoRealMoneyPriceForCatalogItem",
    "TradeInventoryItemIsNotTradable",
    "TradeAcceptedCatalogItemIsNotTradable",
    "UsersAlreadyFriends",
    "LinkedIdentifierAlreadyClaimed",
    "CustomIdNotLinked",
    "TotalDataSizeExceeded",
    "DeleteKeyConflict",
    "InvalidXboxLiveToken",
    "ExpiredXboxLiveToken",
    "ResettableStatisticVersionRequired",
    "NotAuthorizedByTitle",
    "NoPartnerEnabled",
    "InvalidPartnerResponse",
    "APINotEnabledForGameServerAccess",
    "StatisticNotFound",
    "StatisticNameConflict",
    "StatisticVersionClosedForWrites",
    "StatisticVersionInvalid",
    "APIClientRequestRateLimitExceeded",
    "InvalidJSONContent",
    "InvalidDropTable",
    "StatisticVersionAlreadyIncrementedForScheduledInterval",
    "StatisticCountLimitExceeded",
    "StatisticVersionIncrementRateExceeded",
    "ContainerKeyInvalid",
    "CloudScriptExecutionTimeLimitExceeded",
    "NoWritePermissionsForEvent",
    "CloudScriptFunctionArgumentSizeExceeded",
    "CloudScriptAPIRequestCountExceeded",
    "CloudScriptAPIRequestError",
    "CloudScriptHTTPRequestError",
    "InsufficientGuildRole",
    "GuildNotFound",
    "OverLimit",
    "EventNotFound",
    "InvalidEventField",
    "InvalidEventName",
    "CatalogNotConfigured",
    "OperationNotSupportedForPlatform",
    "SegmentNotFound",
    "StoreNotFound",
    "InvalidStatisticName",
    "TitleNotQualifiedForLimit",
    "InvalidServiceLimitLevel",
    "ServiceLimitLevelInTransition",
    "CouponAlreadyRedeemed",
    "GameServerBuildSizeLimitExceeded",
    "GameServerBuildCountLimitExceeded",
    "VirtualCurrencyCountLimitExceeded",
    "VirtualCurrencyCodeExists",
    "TitleNewsItemCountLimitExceeded",
    "InvalidTwitchToken",
    "TwitchResponseError",
    "ProfaneDisplayName",
    "UserAlreadyAdded",
    "InvalidVirtualCurrencyCode",
    "VirtualCurrencyCannotBeDeleted",
    "IdentifierAlreadyClaimed",
    "IdentifierNotLinked",
    "InvalidContinuationToken",
    "ExpiredContinuationToken",
    "InvalidSegment",
    "InvalidSessionId",
    "SessionLogNotFound",
    "InvalidSearchTerm",
    "TwoFactorAuthenticationTokenRequired",
    "GameServerHostCountLimitExceeded",
    "PlayerTagCountLimitExceeded",
    "RequestAlreadyRunning",
    "ActionGroupNotFound",
    "MaximumSegmentBulkActionJobsRunning",
    "NoActionsOnPlayersInSegmentJob",
    "DuplicateStatisticName",
    "ScheduledTaskNameConflict",
    "ScheduledTaskCreateConflict",
    "InvalidScheduledTaskName",
    "InvalidTaskSchedule",
    "SteamNotEnabledForTitle",
    "LimitNotAnUpgradeOption",
    "NoSecretKeyEnabledForCloudScript",
    "TaskNotFound",
    "TaskInstanceNotFound",
    "InvalidIdentityProviderId",
    "MisconfiguredIdentityProvider",
    "InvalidScheduledTaskType",
    "BillingInformationRequired",
    "LimitedEditionItemUnavailable",
    "InvalidAdPlacementAndReward",
    "AllAdPlacementViewsAlreadyConsumed",
    "GoogleOAuthNotConfiguredForTitle",
    "GoogleOAuthError",
    "UserNotFriend",
    "InvalidSignature",
    "InvalidPublicKey",
    "GoogleOAuthNoIdTokenIncludedInResponse",
    "StatisticUpdateInProgress",
    "LeaderboardVersionNotAvailable",
    "StatisticAlreadyHasPrizeTable",
    "PrizeTableHasOverlappingRanks",
    "PrizeTableHasMissingRanks",
    "PrizeTableRankStartsAtZero",
    "InvalidStatistic",
    "ExpressionParseFailure",
    "ExpressionInvokeFailure",
    "ExpressionTooLong",
    "DataUpdateRateExceeded",
    "RestrictedEmailDomain",
    "EncryptionKeyDisabled",
    "EncryptionKeyMissing",
    "EncryptionKeyBroken",
    "NoSharedSecretKeyConfigured",
    "SecretKeyNotFound",
    "PlayerSecretAlreadyConfigured",
    "APIRequestsDisabledForTitle",
    "InvalidSharedSecretKey",
    "PrizeTableHasNoRanks",
    "ProfileDoesNotExist",
    "ContentS3OriginBucketNotConfigured",
    "InvalidEnvironmentForReceipt",
    "EncryptedRequestNotAllowed",
    "SignedRequestNotAllowed",
    "RequestViewConstraintParamsNotAllowed",
    "BadPartnerConfiguration",
    "XboxBPCertificateFailure",
    "XboxXASSExchangeFailure",
    "InvalidEntityId",
    "StatisticValueAggregationOverflow",
    "EmailMessageFromAddressIsMissing",
    "EmailMessageToAddressIsMissing",
    "SmtpServerAuthenticationError",
    "SmtpServerLimitExceeded",
    "SmtpServerInsufficientStorage",
    "SmtpServerCommunicationError",
    "SmtpServerGeneralFailure",
    "EmailClientTimeout",
    "EmailClientCanceledTask",
    "EmailTemplateMissing",
    "InvalidHostForTitleId",
    "EmailConfirmationTokenDoesNotExist",
    "EmailConfirmationTokenExpired",
    "AccountDeleted",
    "PlayerSecretNotConfigured",
    "InvalidSignatureTime",
    "NoContactEmailAddressFound",
    "InvalidAuthToken",
    "AuthTokenDoesNotExist",
    "AuthTokenExpired",
    "AuthTokenAlreadyUsedToResetPassword",
    "MembershipNameTooLong",
    "MembershipNotFound",
    "GoogleServiceAccountInvalid",
    "GoogleServiceAccountParseFailure",
    "EntityTokenMissing",
    "EntityTokenInvalid",
    "EntityTokenExpired",
    "EntityTokenRevoked",
    "InvalidProductForSubscription",
    "XboxInaccessible",
    "SubscriptionAlreadyTaken",
    "SmtpAddonNotEnabled",
    "APIConcurrentRequestLimitExceeded",
    "XboxRejectedXSTSExchangeRequest",
    "VariableNotDefined",
    "TemplateVersionNotDefined",
    "FileTooLarge",
    "TitleDeleted",
    "TitleContainsUserAccounts",
    "TitleDeletionPlayerCleanupFailure",
    "EntityFileOperationPending",
    "NoEntityFileOperationPending",
    "EntityProfileVersionMismatch",
    "TemplateVersionTooOld",
    "MembershipDefinitionInUse",
    "PaymentPageNotConfigured",
    "FailedLoginAttemptRateLimitExceeded"
  ]
}